input {
  file {
    path => "/var/log/apache2/*.log"
    start_position => beginning
  }
  file {
    path => "/var/log/syslog"
    start_position => beginning
  }
  file {
    path => "/usr/share/pydio/data/logs/log_*.txt"
    start_position => beginning
  }
}

filter {
  if [path] =~ "access" {
    mutate {
        replace => { type => "apache_access" }
        remove_tag => [ "_grokparsefailure" ]
        remove_field => [ "tags", "tag", "path" ]
    }
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
  } else if [path] =~ "error" {
    grok {
        patterns_dir => "./grok_patterns"
        match => { "message" => "%{APACHEERRORLOG}" }
    }
    mutate {
        replace => { type => "apache_error" }
        replace => { message => "%{error_message}" }
        remove_tag => [ "_grokparsefailure" ]
        remove_field => [ "tags", "tag", "path", "error_message" ]
    }
    if [message] == "PDOStatement: database schema has changed" {
      drop {}
    }
    if [request] == "/update" {
      drop {}
    }
    if [request] == "/feed" {
      drop {}
    }
  }  else if [path] =~ "pydio" {
    grok {
        patterns_dir => "./grok_patterns"
        match => { "message" => "%{PYDIOLOG}" }
    }
    mutate {
        replace => { type => "pydio" }
        replace => { message => "%{pydio_message}" }
        remove_tag => [ "_grokparsefailure" ]
        remove_field => [ "tags", "tag", "path", "pydio_message" ]
    }
  } else {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "type", "syslog" ]
    }
    syslog_pri { }
    mutate {
      remove_field => [ "message" ]
    }
    if [syslog_program] == "CRON" {
      drop {}
    }
    if [syslog_program] =~ /^postfix.+/ {
      drop {}
    }
  }
}

output {
  if [type] in ['apache_error', 'apache_access'] {
    mongodb {
        collection => "apachelogs"
        database => "logs"
        uri => "mongodb://root:root@localhost"
    }
  } else if [type] == 'syslog' {
    mongodb {
        collection => "syslogs"
        database => "logs"
        uri => "mongodb://root:root@localhost"
    }
  } else if [type] == 'pydio' {
    mongodb {
      collection => "pydiologs"
      database => "logs"
      uri => "mongodb://root:root@localhost"
    }
  } else {
    mongodb {
      collection => "otherlogs"
      database => "logs"
      uri => "mongodb://root:root@localhost"
    }
  }
}
